length(log_r)
m1=garchFit(~arma(4,4)+garch(1,1),data=ts(log_r)[1:1182],trace=F)
summary(m1)
?`predict,fGARCH-method`
predict(m1,n.ahead=5)
m1=garchFit(~arma(4,4)+garch(1,1),data=ts(log_r),trace=F)
summary(m1)
set.seed(123)
fit = garchFit(~ garch(1, 1), data = garchSim(), trace = FALSE)
fit
predict(fit, n.ahead = 10)
m1=garchFit(~garch(1,1),data=ts(log_r),trace=F)
summary(m1)
predict(fit, n.ahead = 10)
m1=garchFit(~arma(4,4)+garch(1,1),data=ts(log_r),trace=F)
summary(m1)
m1=garchFit(~garch(1,1),data=ts(log_r),trace=F)
summary(m1)
length(log_r)
m2=garchFit(~garch(1,1),data=ts(log_r)[1:1182],trace=F)
summary(m2)
predict(m2)
m2
log_r
predict(m2,4)
dat2=read.table("https://faculty.chicagobooth.edu/-/media/faculty/ruey-s-tsay/teaching/fts3/m-mrk2vw.txt",header = TRUE)
dat2
pca1 <- prcomp(data = dat2, center = TRUE, scale. = TRUE)
?prcomp
pca1 <- prcomp(as.matrix(dat2), center = TRUE, scale. = TRUE)
pca1
summary(pca1)
pca1 <- prcomp(as.matrix(dat2), center = TRUE, scale. = TRUE,cor=TRUE)
?princomp
pca1=princomp(as.matrix(dat2))
summary(pca1)
pca1=princomp(as.matrix(dat2),cor=TRUE)
summary(pca1)
install.packages('psych')
library(psych)
fa_model=fa(dat2, rotate = "varimax", scores = "regression")
summary(fa_model)
fa_model$nh
fa_model$factors
pca2=princomp(as.matrix(dat2),cor = TRUE)
summary(pca2)
pca2$loadings
fa_model=fa(dat2,k=5, rotate = "varimax", scores = "regression")
fa_model
fa_model=fa(dat2,k=5, rotate = "varimax", fm='lm')
fa_model=fa(dat2,k=5, rotate = "varimax", fm='ml')
fa_model2=fa(dat2,k=5, rotate = "varimax", fm='ml')
fa_model2$loadings
?fs
?fa
fa_model=fa(dat2,nfactors = =5, rotate = "varimax", scores = "regression")
fa_model=fa(dat2,nfactors = 5, rotate = "varimax")
fa_model
fa_model2=fa(dat2,nfactors = 5, rotate = "varimax", fm='ml')
fa_model2$loadings
pca2$loadings
pca3=princomp(as.matrix(dat2),k=5,cor = TRUE)
?princomp
dat2
dat2=read.table("https://faculty.chicagobooth.edu/-/media/faculty/ruey-s-tsay/teaching/fts3/m-mrk2vw.txt",header = TRUE)
dat2=dat2[,-1]
pca1=princomp(as.matrix(dat2))
summary(pca1)
pca2=princomp(as.matrix(dat2),cor = TRUE)
summary(pca2)
library(psych)
fa_model=fa(dat2,nfactors = 3, rotate = "varimax")
fa_model2=fa(dat2,nfactors = 3, rotate = "varimax", fm='ml')
fa_model2$loadings
pca2$loadings
summary(pca2)
pca2$loadings
dat=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
dat
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
classresult
classresult$性别=as.factor(classresult$性别)
classresult$性别
classresult$性别=as.factor(classresult$性别)
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
classresult$性别
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=factor(classresult$性别)
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$`性别`=as.factor(classresult$`性别`)
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
grade=as.data.frame(classresult$成绩)
grade
classresult[classresult$成绩>85,标签]
classresult[classresult$成绩>85,1]
classresult[classresult$成绩>90&classresult$性别=='男',1]
classresult[classresult$成绩>=90&classresult$性别=='男',1]
t(classresult)
as.data.frame(t(classresult))
as.data.frame(t(classresult))
?as.data.frame
as.data.frame(t(classresult),col.names=classresult$标签)
as.data.frame(t(classresult),col.names=classresult$标签,make.names = F)
as.data.frame(t(classresult),col.names=classresult$标签,make.names = F)
colnames(classresult)=classresult$标签
colnames(t(classresult))=classresult$标签
colnames(as.data.frame(t(classresult)))=classresult$标签
#a
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
#c
grade=as.data.frame(classresult$成绩)
#d
classresult[classresult$成绩>85,1]
#e
classresult[classresult$成绩>90&classresult$性别=='男',1]
#f
colnames(as.data.frame(t(classresult)))=classresult$标签
as.data.frame(t(classresult))
colnames(as.data.frame(t(classresult)))
classresult$标签
t(classresult)
t(classresult)[1,]
name=classresult$标签
colnames(as.data.frame(t(classresult)[-1,]))=name
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
#c
grade=as.data.frame(classresult$成绩)
#d
classresult[classresult$成绩>85,1]
#e
classresult[classresult$成绩>90&classresult$性别=='男',1]
#f
name=classresult$标签
colnames(as.data.frame(t(classresult)[-1,]))=name
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
#c
grade=as.data.frame(classresult$成绩)
#d
classresult[classresult$成绩>85,1]
#e
classresult[classresult$成绩>90&classresult$性别=='男',1]
#f
name=classresult$标签
classresult$标签
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
#c
grade=as.data.frame(classresult$成绩)
#d
classresult[classresult$成绩>85,1]
#e
classresult[classresult$成绩>90&classresult$性别=='男',1]
#f
name=classresult$标签
name
colnames(as.data.frame(t(classresult)[-1,]))=name
as.data.frame(t(classresult)[-1,])
name=classresult$标签
new=as.data.frame(t(classresult)[-1,])
ew
new
colnames(new)=name
ew
new
#a
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
#c
grade=as.data.frame(classresult$成绩)
#d
classresult[classresult$成绩>85,1]
#e
classresult[classresult$成绩>90&classresult$性别=='男',1]
#f
name=classresult$标签
new=as.data.frame(t(classresult)[-1,])
colnames(new)=name
#a
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
#c
grade=as.data.frame(classresult$成绩)
#d
classresult[classresult$成绩>85,1]
#e
classresult[classresult$成绩>90&classresult$性别=='男',1]
#f
name=classresult$标签
new=as.data.frame(t(classresult)[-1,])
colnames(new)=name
#a
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
#c
grade=as.data.frame(classresult$成绩)
#d
classresult[classresult$成绩>85,1]
#e
classresult[classresult$成绩>90&classresult$性别=='男',1]
#f
name=classresult$标签
new=as.data.frame(t(classresult)[-1,])
colnames(new)=name
new
row.names(new)=NULL
new
classresult$grade='F'
classresult
classresult$grade='F'
classresult[classresult$成绩>=60&classresult$成绩<70,'grade']='C'
classresult[classresult$成绩>=70&classresult$成绩<80,'grade']='B'
classresult[classresult$成绩>=80&classresult$成绩<100,'grade']='A'
classresult
classresult$grade='F'
classresult[classresult$成绩>=60&classresult$成绩<70,'grade']='C'
classresult[classresult$成绩>=70&classresult$成绩<80,'grade']='B'
classresult[classresult$成绩>=80&classresult$成绩<100,'grade']='A'
new1=as.data.frame(t(classresult)[-1,])
colnames(new1)=name
row.names(new1)=NULL
new1
#a
classresult=data.frame('标签'=c('ZS','LS','LW','西蒙','艾米丽','悟空','春丽'),'性别'=c(rep(c('男'),4),c('女','男','女')),'成绩'=c(
85,78,90,80,82,40,96
))
#b
classresult$性别=as.factor(classresult$性别)
#c
grade=as.data.frame(classresult$成绩)
#d
classresult[classresult$成绩>85,1]
#e
classresult[classresult$成绩>90&classresult$性别=='男',1]
#f
name=classresult$标签
new=as.data.frame(t(classresult)[-1,])
colnames(new)=name
new
#g
classresult$grade='F'
classresult[classresult$成绩>=60&classresult$成绩<70,'grade']='C'
classresult[classresult$成绩>=70&classresult$成绩<80,'grade']='B'
classresult[classresult$成绩>=80&classresult$成绩<100,'grade']='A'
new1=as.data.frame(t(classresult)[-1,])
colnames(new1)=name
new1
0.7/6.57
0.7/(6.57/sqrt(10))
0.7/2.08
24-0.383*38-3
54+34+33+18
139*0.5
139*0.2
(54-69.5)^2/69.5+(34-27.8)^2/27.8+(27.8-33)^2/33+(18-13.9)^2/13.9
1-pchisq(6.4,3)
1-qf(4.311,3,40)
qf(4.311,3,40)
1-pf(4.311,3,40)
0.45*0.4+0.55*0.71
1-0.5705
(15.74+19.83)/2
48/72
51/72
(0.667-0.708)/sqrt(0.667*(1-0.667)/72+0.708*(1-0.708)/72)
1-pnorm(1.25)
c(1.25-0.108,1.25+0.108)
0.667
0.667-0.708
c(-0.041-0.108,-0.041+0.108)
Midterm=c(77,50,71,72,80,93,95,98,66,55,63,62,51,65,90,74,48,67,67,85)
final=c(82,66,78,43,56,85,99,98,68,45,75,45,71,60,87,68,56,85,60,90)
model1=lm(final~Midterm)
summary(model1)
anova(model1)
res=resid(model1)
shapiro.test(res)
library(lmtest)
fit_value=fitted(model1)
bptest(fit_value)
fit_value
bptest(model1)
?bptest
dwtest(model1)
(0.064-0.086)/sqrt(0.052*(1-0.052)/15+0.267*(1-0.267)/8)
((12*qt(0.875.17))/0.85)^2
((12*qt(0.875,19))/0.85)^2
x=c(0.8,0.83,1.89,1.04,1.45,1.38,1.11,1.64,0.73,1.46)
y=c(1.15,0.88,0.9,0.74,1.21)
wilcox.test(x,y,al='g')
wilcox.test(x,y,al='l')
(1061.7/2)/((2597.5-1061.7)/7)
125/180*500
500/6
25/180*500
30/180*500
125/180*500+500/6+25/180*500
125/180*500
125/180*500+500/6
500-125/180*500+500/6
196/280
(17.3+21.7)/2
(21.7-17.3)/2
qnorm(0.975)
2.2/1.96
library(quantmod)
GetSymbols.netease(code="0000001", from="20150101", to="20150131",
savefile="SH000001.csv", dfname="SH000001")
install.packages("WindR")
getMetals("gold",from="2005-01-01")
library(quantmod)
data_symbol <- getSymbols("APPL", src = "yahoo", from = start_date, to = end_date, auto.assign = FALSE)
data_symbol <- getSymbols("APPL", src = "yahoo", from = start_date, to = end_date, auto.assign = FALSE)
start_date <- "2022-01-01"
end_date <- Sys.Date()
data_symbol <- getSymbols("APPL", src = "yahoo", from = start_date, to = end_date, auto.assign = FALSE)
data_symbol <- getSymbols("APPL", src = "yahoo", from = start_date, to = end_date, auto.assign = FALSE)
data_symbol <- getSymbols("GOOGLE", src = "yahoo", from = start_date, to = end_date, auto.assign = FALSE)
getSymbols(c('QQQ','SPY'))
library(readr)
url="https://archive.ics.uci.edu/ml/datasets/lenses"
download.file(url, destfile = "D://a.csv", mode = "wb")
?download.file
install.packages("pedquant")
library(pedquant)
FAANG = md_stock(c('META', 'AMZN', 'AAPL', 'NFLX', 'GOOG'))
FAANG
meta= md_stock(c('META'),from=c(2022,1,1))
meta= md_stock(c('META'),from=c(2022))
meta
meta$meta
type(meta$meta)
class(meta$meta)
meta= md_stock(c('META'))
meta
meta= md_stock(c('META'),from=c(2023))
meta
meta= md_stock(c('META'))
library(pedquant)
meta= md_stock(c('META'))$meta[,-c(1,2)]
meta
write.csv(meta,"D://meta.csv")
library(pedquant)
meta= md_stock(c('META'))$meta
library(pedquant)
meta= md_stock(c('META'))
meta
setwd("C:\\Users\\Administrator\\Desktop\\nba")
library(tidyverse)
library(randomForest)
game=read_csv("games.csv")
game_detile=read_csv("games_details.csv")
rank=read_csv("ranking.csv")
team=read_csv("teams.csv")
player=read_csv("players.csv")
#games
game=game[,-c(3,7,14)]#比赛主客队得分
#game_detile
game_detile=game_detile[,-c(9)]#球员得分
#rank
rank=rank[,-c(13)]
merged_data = left_join(game, player, by = c("HOME_TEAM_ID" = "TEAM_ID"),relationship = "many-to-many")
head(merged_data)
head(merged_data$HOME_TEAM_WINS,10)
merged_data  %>%
group_by(PLAYER_NAME) %>%
summarise(total_wins = sum(HOME_TEAM_WINS, na.rm = TRUE)) %>%
arrange(desc(total_wins)) %>%  # 按总胜利次数降序排序
slice(1:10)
player
dim(game)
head(game,10)
game$SEASON
min(game$SEASON)
team
dim(team)
15*82*20
head(game,10)
82*20
merged_data  %>%
group_by(PLAYER_NAME) %>%
summarise(total_wins = sum(HOME_TEAM_WINS, na.rm = TRUE)) %>%
arrange(total_wins)
team%>%group_by(YEARFOUNDED)%>%summarise(n())
city_data <- data.frame(
CITY = c("Atlanta", "Boston", "New Orleans", "Chicago", "Dallas", "Denver", "Houston",
"Los Angeles", "Miami", "Milwaukee", "Minneapolis", "Brooklyn",
"New York", "Orlando", "Indianapolis", "Philadelphia", "Phoenix", "Portland",
"Sacramento", "San Antonio", "Oklahoma City", "Toronto", "Salt Lake City",
"Memphis", "Washington", "Detroit", "Charlotte", "Cleveland", "San Francisco"),
Latitude = c(33.7490, 42.3601, 29.9511, 41.8781, 32.7767, 39.7392, 29.7604,
34.0522, 25.7617, 43.0389, 44.9778, 40.6782, 40.7128,
28.5383, 39.7684, 39.9526, 33.4484, 45.5122, 38.5816,
29.4241, 35.4676, 43.6511, 40.7608, 35.1495, 38.8951,
42.3314, 35.2271, 41.4993, 37.7749),
Longitude = c(-84.3880, -71.0589, -90.0715, -87.6298, -96.7970, -104.9903, -95.3698,
-118.2437, -80.1918, -87.9065, -93.2650, -73.9442, -74.0060,
-81.3792, -86.1581, -75.1652, -112.0740, -122.6587, -121.4944,
-98.4936, -97.5164, -79.3832, -111.8910, -90.0489, -77.0369,
-83.0458, -80.8431, -81.6944, -122.4194)
)
usa <- map_data("usa")
ggplot() +
geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = city_data, aes(x = Longitude, y = Latitude), color = "red", size = 3) +
geom_text(data = city_data, aes(x = Longitude, y = Latitude, label = CITY), vjust = -0.5, size = 3) +
theme_void() +
theme(plot.title = element_text(size = 16, face = "bold", hjust = 0.5)) +
labs(title = "NBA Teams' Cities in USA", caption = "Source: City data from NBA teams")
View(pca1)
team%>%group_by(YEARFOUNDED)%>%summarise(n())
city_data <- data.frame(
CITY = c("Atlanta", "Boston", "New Orleans", "Chicago", "Dallas", "Denver", "Houston",
"Los Angeles", "Miami", "Milwaukee", "Minneapolis", "Brooklyn",
"New York", "Orlando", "Indianapolis", "Philadelphia", "Phoenix", "Portland",
"Sacramento", "San Antonio", "Oklahoma City", "Toronto", "Salt Lake City",
"Memphis", "Washington", "Detroit", "Charlotte", "Cleveland", "San Francisco"),
Latitude = c(33.7490, 42.3601, 29.9511, 41.8781, 32.7767, 39.7392, 29.7604,
34.0522, 25.7617, 43.0389, 44.9778, 40.6782, 40.7128,
28.5383, 39.7684, 39.9526, 33.4484, 45.5122, 38.5816,
29.4241, 35.4676, 43.6511, 40.7608, 35.1495, 38.8951,
42.3314, 35.2271, 41.4993, 37.7749),
Longitude = c(-84.3880, -71.0589, -90.0715, -87.6298, -96.7970, -104.9903, -95.3698,
-118.2437, -80.1918, -87.9065, -93.2650, -73.9442, -74.0060,
-81.3792, -86.1581, -75.1652, -112.0740, -122.6587, -121.4944,
-98.4936, -97.5164, -79.3832, -111.8910, -90.0489, -77.0369,
-83.0458, -80.8431, -81.6944, -122.4194)
)
usa <- map_data("usa")
#加上胜率
ggplot() +
geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = "white", color = "black") +
geom_point(data = city_data, aes(x = Longitude, y = Latitude), color = "red", size = 3) +
geom_text(data = city_data, aes(x = Longitude, y = Latitude, label = CITY), vjust = -0.5, size = 3) +
theme_void() +
theme(plot.title = element_text(size = 16, face = "bold", hjust = 0.5)) +
labs(title = "NBA Teams' Cities in USA", caption = "Source: City data from NBA teams")
head(game_detile)
use_dat_play=dat_play%>%select(c("START_POSITION","FGM","FGA","FG_PCT","FG3M","FG3A","FG3_PCT","FTM","FTA","FT_PCT","OREB","DREB","REB","AST","STL","BLK","TO","PF","PTS","PLUS_MINUS"))
dat_play=game_detile[,-c(2,3,4,5,7,9)]%>%inner_join(game,by=c("GAME_ID"),relationship = "many-to-many")
dat_play=dat_play[,-c(1)]
dat_play=na.omit(dat_play)
use_dat_play=dat_play%>%select(c("START_POSITION","FGM","FGA","FG_PCT","FG3M","FG3A","FG3_PCT","FTM","FTA","FT_PCT","OREB","DREB","REB","AST","STL","BLK","TO","PF","PTS","PLUS_MINUS"))
use_dat_play[,-c(1,2,3)]
use_dat_play
dat_play=game_detile[,-c(2,3,4,5,7,9)]%>%inner_join(game,by=c("GAME_ID"),relationship = "many-to-many")
dat_play=dat_play[,-c(1)]
dat_play=na.omit(dat_play)
use_dat_play=dat_play%>%select(c("START_POSITION","FGA","FG_PCT","FG3A","FG3_PCT","FTA","FT_PCT","OREB","DREB","REB","AST","STL","BLK","TO","PF","PTS","PLUS_MINUS"))
use_dat_play=dat_play%>%select(c("START_POSITION","FGA","FG_PCT","FG3A","FG3_PCT","FTA","FT_PCT","OREB","DREB","REB","AST","STL","BLK","TO","PF","PTS","PLUS_MINUS"))
(c("START_POSITION","FGA","FG_PCT","FG3A","FG3_PCT","FTA","FT_PCT","OREB","DREB","AST","STL","BLK","TO","PF","PTS","PLUS_MINUS"))
use_dat_play=dat_play%>%select(c("START_POSITION","FGA","FG_PCT","FG3A","FG3_PCT","FTA","FT_PCT","OREB","DREB","AST","STL","BLK","TO","PF","PTS","PLUS_MINUS"))
quantile(use_dat_play$PTS,0.25)
quantile(use_dat_play$PTS,0.5)
quantile(use_dat_play$PTS,0.75)
use_dat_play$class=0
use_dat_play$class[use_dat_play$PTS>8]=1
use_dat_play$class[use_dat_play$PTS>13]=2
use_dat_play$class[use_dat_play$PTS>19]=3
use_dat_play$class=as.factor(use_dat_play$class)
use_dat_play=use_dat_play[,-c(19)]
colnames(use_dat_play)
use_dat_play$class=0
use_dat_play$class[use_dat_play$PTS>8]=1
use_dat_play$class[use_dat_play$PTS>13]=2
use_dat_play$class[use_dat_play$PTS>19]=3
use_dat_play$class=as.factor(use_dat_play$class)
colnames(use_dat_play)
use_dat_play=use_dat_play[,-c(15)]
model_p=randomForest(class~.,use_dat_play)
model_p$importance%>%as.data.frame()%>%arrange(desc(MeanDecreaseGini))
